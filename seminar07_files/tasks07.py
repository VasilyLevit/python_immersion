'''Задание №1
✔ Напишите функцию, которая заполняет файл (добавляет в конец) случайными парами чисел.
✔ Первое число int, второе - float разделены вертикальной чертой.
✔ Минимальное число - -1000, максимальное - +1000.
✔ Количество строк и имя файла передаются как аргументы функции.'''

from random import randint, uniform, choice

MIN_NUM = -1000
MAX_NUM = 1000


def feel_numbers(count: int, file_name: str) -> None:
    '''Заполняет файл (добавляет в конец) случайными парами чисел'''    
    with open(file_name, 'a', encoding='utf-8') as f:
        for _ in range(count):
            f.write(f'{randint(MIN_NUM, MAX_NUM)} | {uniform(MIN_NUM, MAX_NUM)}\n')


# feel_numbers(3, 'task01.txt')

'''Задание №2 
✔ Напишите функцию, которая генерирует псевдоимена.
✔ Имя должно начинаться с заглавной буквы, состоять из 4-7 букв, среди которых
  обязательно должны быть гласные.
✔ Полученные имена сохраните в файл.'''

VOWELS = 'aeiouy'
CONSONANTS = 'bcdfghjklmnpqrstvwxz'

def feel_names(quantity_names: int, file_name: str) -> None:
    '''Генерирует псевдоимена и сохраняет в файл
    :quantity names: количество имён'''    
    with open(file_name, 'a', encoding='utf-8') as f: #открываем файл в режиме добавления 'a'
        for _ in range(quantity_names):
            name = ''.join(choice(VOWELS) if i % 3 == 0 else choice(CONSONANTS) 
                                                      for i in range(randint(4, 7)))
            f.write(f'{name.capitalize()}\n')


# feel_names(10, 'task02.txt')

'''Задание №3
Напишите функцию, которая открывает на чтение созданные в прошлых задачах файлы 
  с числами и именами.
Перемножьте пары чисел. В новый файл сохраните имя и произведение:
✔ если результат умножения отрицательный, сохраните имя записанное строчными буквами 
  и произведение по модулю
✔ если результат умножения положительный, сохраните имя прописными буквами и 
  произведение округлённое до целого.
✔ В результирующем файле должно быть столько же строк, сколько в более длинном файле.
✔ При достижении конца более короткого файла, возвращайтесь в его начало.'''

def _read_or_begin(fd) -> str:
    '''При достижении конца более короткого файла, возвращает указатель в его начало'''
    line = fd.readline()
    if not line:
        fd.seek(0)
        return _read_or_begin(fd)
    return line[:-1]
        

def join_2files():
    with (open('seminar07_files/task01.txt', 'r', encoding='utf-8') as f_n, 
          open('seminar07_files/task02.txt', 'r', encoding='utf-8') as f_w,
          open('seminar07_files/task03.txt', 'w', encoding='utf-8') as f_r):
        lines_file1 = sum(1 for _ in f_n) # определяем количество строк в файле
        lines_file2 = sum(1 for _ in f_w)
        
        for _ in range(max(lines_file1, lines_file2)): # 
            num = _read_or_begin(f_n)
            word = _read_or_begin(f_w)
            num_a, num_b = num.split('|')
            mult = int(num_a) * float(num_b)
            if mult < 0:
                f_r.write(f'{word.lower()} {abs(mult)}')
            elif mult > 0:
                f_r.write(f'{word.upper()} {round(mult)}\n')

join_2files()

'''Задание №4
✔ Создайте функцию, которая создаёт файлы с указанным расширением.
Функция принимает следующие параметры:
✔ расширение
✔ минимальная длина случайно сгенерированного имени, по умолчанию 6
✔ максимальная длина случайно сгенерированного имени, по умолчанию 30
✔ минимальное число случайных байт, записанных в файл, по умолчанию 256
✔ максимальное число случайных байт, записанных в файл, по умолчанию 4096
✔ количество файлов, по умолчанию 42
✔ Имя файла и его размер должны быть в рамках переданного диапазона.'''

def create_files(extension: str, min_len: int = 6, max_len: int = 30, 
                min_bytes: int = 256, max_bytes: int = 4096, quantity_files: int = 42):
    '''Cоздаёт файлы с указанным расширением'''
    for _ in range(quantity_files):
      rad_string = "".join(choice(VOWELS) if i % 3 == 0 else choice(CONSONANTS) 
                                    for i in range(randint(min_len, max_len)))
      data = bytes(randint(0, 255) for _ in range(randint(min_bytes, max_bytes)))
      with open(f'{rad_string}.{extension}','wb') as f:
          f.write(data)

# create_files('bin', 5, 8, 128, 256, 2)

'''Задание №5
✔ Доработаем предыдущую задачу.
✔ Создайте новую функцию которая генерирует файлы с разными расширениями.
✔ Расширения и количество файлов функция принимает в качестве параметров.
✔ Количество переданных расширений может быть любым.
✔ Количество файлов для каждого расширения различно.
✔ Внутри используйте вызов функции из прошлой задачи.'''

'''Задание №6
✔ Дорабатываем функции из предыдущих задач.
✔ Генерируйте файлы в указанную директорию — отдельный параметр функции.
✔ Отсутствие/наличие директории не должно вызывать ошибок в работе функции
(добавьте проверки).
✔ Существующие файлы не должны удаляться/изменяться в случае совпадения имён.'''

'''Задание №7
✔ Создайте функцию для сортировки файлов по директориям: видео, изображения, текст и т.п.
✔ Каждая группа включает файлы с несколькими расширениями.
✔ В исходной папке должны остаться только те файлы, которые не подошли для сортировки.'''

